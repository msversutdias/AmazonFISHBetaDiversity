library(ape)
dir()
tr=read.tree("fcassemiro-South-American-freshwater-fish-2568adc/3167_Neotrop_Freshwater_Fish_spp_time_tree.tree")
tr=read.tree("fcassemiro-South-American-freshwater-fish-2568adc/3167_Neotrop_Freshwater_Fish_spp_time_tree.tre")
tr=read.tree("fcassemiro-South-American-freshwater-fish-2568adc/3167_Neotrop_Freshwater_Fish_spp_time_tree.tre")
tr=read.nexus("fcassemiro-South-American-freshwater-fish-2568adc/3167_Neotrop_Freshwater_Fish_spp_time_tree.tre")
plot(tr)
plot(tr,cex=0.1)
tr
plot(tr[1],cex=0.1)
plot(tr[1:10],cex=0.1)
plot(tr,cex=0.1,ylim=c(0,0.1))
tr$tip.label
fish_mat=read.csv(paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
fish_mat[10065,]
library(knitr)
library(knitcitations)
library(formatR)
#cleanbib()
options("citation_format" = "pandoc",digits=2)
opts_chunk$set(tidy=T,
tidy.opts=list(width.cutoff=60))
panel.cor <- function(x, y, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- (cor(x, y))
txt <- format(round(r,2))
r <- abs(r)
text(0.5, 0.5, txt, cex = 4*r)
}
var_expl=function(x){
if(is.null(x$null)){
print("This is a LM: R2.adjusted has been printed with coefficients!")
}else     (paste("PseudoR2",round((x$null-x$deviance)/x$null,2)*100,"%"))
}
# standardize function (centering and reducing, returning vectors)
Standard <- function(x){ as.vector((x-mean(x,na.rm=T))/(2*sd(x,na.rm=T)))  }
#mudando nome de acordo com a filogenia
muda_nome=function(x,sep=" "){
unlist(lapply(strsplit(x = as.character(x),sep),function(x){
paste(x[1],x[2],sep="_")
}))
}
#criar categoria de cores de acordo com quartis
catego_cores<-function(g){
ecd_f<-ecdf(g)
g_f<-g
g_f[]  <-NA
g_f[ecd_f(g)<=0.25]<-1
g_f[ecd_f(g)>0.25 & ecd_f(g)<=0.5]<-2
g_f[ecd_f(g)>0.5 & ecd_f(g)<=0.75]<-3
g_f[ecd_f(g)>0.75]<-4
return(g_f)
}
#plot function
# y=rnorm(10)
# d=data.frame(y,x=6*y+rnorm(10),z=-1.5*y+rnorm(10),
#              p=6*y+rnorm(10),r=6*y+rnorm(10))
# mod<-lm(y~x+z+p+r,d)
# groups=c(1,2,3,4,4)
plot_effect <- function(x,groups=NULL){
#x=mod
#g=c(1,3,3)
f<-as.data.frame(summary(x)$coefficients)#[-1,]
f$factor = rownames(f)
#f<-f[order(f$factor),]
P<-grep(pattern = "P",x = colnames(f))
op<-par()$mar
x_eixo = 1:nrow(f)
par(mar=c(5,13,0.5,0.5))
stripchart(f$Estimate~x_eixo,las=1,cex=3,
xlim=c(min(f$Estimate-1.96*f$`Std. Error`),max(f$Estimate+1.96*f$`Std. Error`)),
#col=ifelse(f[,P]<=0.05,"black","red"),
pch=1,yaxt="n",
ylab="",xlab="Coefficient estimates");abline(v=0,lty=1,lwd=2,col="gray")
if(!is.null(groups)){
g=groups
cores<-gray.colors(n = length(unique(groups)),start = 0,end = 1,alpha = 0.4)
cores<-cores[groups]
for(i in seq_along(g)){
rect(xleft = min(f$Estimate-1.96*f$`Std. Error`)-1, ybottom = i-0.5,
xright = max(f$Estimate+1.96*f$`Std. Error`)+1, ytop = i+0.5,
col=cores[i],border = "white")
}
}
#abline(h=x_eixo,lty=2,col="lightgray")
axis(side = 2,at = x_eixo, labels = f$factor,las=1)
segments(x0 = f$Estimate-1*f$`Std. Error`, y0 = 1:length(f$factor),
x1=f$Estimate+1*f$`Std. Error`,y1 = 1:length(f$factor),lwd=6)
segments(x0 = f$Estimate-1.96*f$`Std. Error`, y0 = 1:length(f$factor),
x1=f$Estimate+1.96*f$`Std. Error`,y1 = 1:length(f$factor),lwd=3)
points(y=x_eixo,x=f$Estimate,las=1,cex=3,
bg=ifelse(f[,P]<=0.05,"black","white"),
col="black",pch=21)
par(mar=op)
}
# plot_effect(mod,groups)
fish_mat=read.csv(paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
fish_mat[10065,]
table(grep(fish_mat$Referent.Species.Name,pattern = "[_]")==1:length(fish_mat$Referent.Species.Name))
# ##excluding additional marine fish families   2022_03_25
# #marine "Atherinopsidae", "Achiridae", "Belonidae", "Clupeidae","Engraulidae",
# #       "Hemiramphidae", "Potamotrygonidae", "Pristigasteridae", "Sciaenidae",
# #       "Tetraodontidae"
# #not marine according to Lovejoy et al.2006 "Atherinopsidae"
# fish_mat<-droplevels(fish_mat[!fish_mat$Family.Referent.Species %in%
#                                 c("Atherinopsidae", "Achiridae", "Belonidae",
#                                   "Clupeidae","Engraulidae", "Hemiramphidae",
#                                   "Potamotrygonidae", "Pristigasteridae", "Sciaenidae",
#                                   "Tetraodontidae"),])
# table(fish_mat$Family.Referent.Species)
####checking if marine species are out
# head(fish_mat)
# marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
#   "Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
#   "Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
#   "Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
# table(fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp])
# fish_mat[fish_mat$Genus.Referent.Species%in% marineIncSp,]
# fish_mat<-fish_mat[!fish_mat$Genus.Referent.Species %in% marineIncSp,]
# ##eliminating Orestias species because they are from Titikaka lake
fish_mat<-droplevels(fish_mat[!fish_mat$Genus.Referent.Species %in% "Orestias",])
#unindo os codigos antigos e novos
fish2=read.csv(paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/stat97bv_311019.csv",
sep=""),
sep=";",header=T)[,c("Sub_drainage","Basin2stat")]
head(fish2)
fish_mat<-merge(x=fish_mat,y=fish2,by.x="Sub_drainage",by.y="Sub_drainage",all=T)
head(fish_mat)
fish_mat$basin<-fish_mat$Basin2stat
fish_mat$occ<-1
library(reshape2)
fish_mat<-dcast(fish_mat,basin~Referent.Species.Name,fun.aggregate = sum, value.var = "occ")
dim(fish_mat)
fish_mat[1:10,1:5]
rownames(fish_mat)<- fish_mat$basin
fish_mat <- fish_mat[,-c(1)]
fish_mat[fish_mat>0]<-1
#setting NA to 0
fish_mat[is.na(fish_mat)] <- 0
#######################################
# biz<-(fish_mat[c("Pachitea","Ucayali2","Apurimac1","Urubamba",
#            "Huallaga","Maranon5","Maranon3","Santiago", "Pastaza","
#            Curaray","Napo2"),-1])
# biz2<-fish_mat[c("Pachitea","Ucayali2","Apurimac1","Urubamba",
#            "Huallaga","Maranon5","Maranon3","Santiago", "Pastaza","
#            Curaray","Napo2"),apply(fish_mat,2,sum,na.rm=T)==1]
# biz2 <- biz2[,apply(biz2,2,sum,na.rm=T)==1]
# dim(biz2)
# rowSums(biz2)
# id1<-grep(pattern = c("Maranon"),rownames(fish_mat))
# id2<-grep(pattern = c("Ucayali"),rownames(fish_mat))
# id3<-grep(pattern = c("Tapaj"),rownames(fish_mat))
# id4<-grep(pattern = c("Xingu"),rownames(fish_mat))
# id<-c(id1,id2,id3,id4);rm(id1,id2,id3,id4)
# biz3<-fish_mat[id,apply(fish_mat,2,sum,na.rm=T)==1]
# biz3<-biz3[,!apply(biz3,2,sum,na.rm=T)==0]
# dim(biz3)
# biz3$basin<-rownames(biz3)
#
# #especies endemicas nos andes
# biz=reshape2::melt(biz3)
# biz[is.na(biz)]<-0
#
# #especies totais nos andes
# biz<-droplevels(biz[biz$value>0,])
# dim(biz)
# head(biz)
# table(biz$variable)
#especies e generos das bacias selecionadas
# biz<-droplevels(biz[biz$value==1,])
# head(biz)
# dim(biz)
# biz<-biz[order(biz$basin),]
# write.table(biz,"especies_generos_OccUnica_baciasSelecionadas.csv",sep=";")
#######################################
library(vegan)
# jpeg("species accumulation curve.jpeg",width = 2000,height = 2000,res = 400)
# plot(specaccum(fish_mat,method = "random",permutations = 100),
#      ylab="Number of species",xlab="Number of samples",las=1);grid()
# plot(specaccum(fish_mat,method = "collector"),add=T,col="red",lwd=5)
# dev.off()
#
# jpeg("estimated richness.jpeg",width = 4000,height = 2000,res = 400)
# plot(poolaccum(x = fish_mat),layout=c(5,1))#
# dev.off()
#occurence
# y <- sort(colSums(fish_mat),decreasing=T)
# y <- y/sum(y)
# x <- 1:length(y)
# plot(y~x)
# #zones
# library(reshape2)
# fish_mat2<-fish_mat
#
# a<-melt(fish_mat2)
# a<-a[!is.na(a$value),]
# head(a)
#
# library(igraph)
# b<-graph.data.frame(a[1:5000,],directed = FALSE)
# #plot(b)
# b<-as.matrix(get.adjacency(b))
# b[1:10,1:10]
#
# library(rnetcarto)
# netcarto(b)
library(ape)
# library(GISTools)
library(RColorBrewer)
library(recluster)
PBsim<-read.csv(paste0(getwd(),
"/BetaPhylo_meanvalues_Genet_Taxo/PSIMmean_over100posteriorSampling_2020_05_12.csv"),
sep=",",header=TRUE,row.names = 1)
#mudando nome de acordo com a filogenia
muda_nome=function(x,sep=" "){
unlist(lapply(strsplit(x = as.character(x),sep),function(x){
paste(x[1],x[2],sep="_")
}))
}
#carregando pacotes usados
library(letsR)
# library(maptools)
library(rgdal)
library(ape)
library(picante)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Dropbox/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Dropbox/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
table(grep(fish_mat$Referent.Species.Name,pattern = "[_]")==1:length(fish_mat$Referent.Species.Name))
####retirar as especies de origem marinha
head(fish_mat)
# ##eliminating Orestias species because they are from Titikaka lake
fish_mat<-droplevels(fish_mat[!fish_mat$Genus.Referent.Species %in% "Orestias",])
#unindo os codigos antigos e novos
fish2=read.csv(paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/stat97bv_311019.csv",
sep=""),
sep=";",header=T)[,c("Sub_drainage","Basin2stat")]
head(fish2)
fish_mat<-merge(x=fish_mat,y=fish2,by.x="Sub_drainage",by.y="Sub_drainage",all=T)
head(fish_mat)
fish_mat$basin<-fish_mat$Basin2stat
fish_mat$occ<-1
library(reshape2)
fish_mat<-dcast(fish_mat,basin~Referent.Species.Name,fun.aggregate = sum, value.var = "occ")
dim(fish_mat)
fish_mat[1:10,1:5]
rownames(fish_mat)<- fish_mat$basin
fish_mat <- fish_mat[,-c(1)]
fish_mat[fish_mat>0]<-1
mami=fish_mat
tr
tr$tip.label
strsplit(tr$tip.label,split = "_")
lapply(strsplit(tr$tip.label,split = "_"),function(x){
x[2:3]
})
lapply(strsplit(tr$tip.label,split = "_"),function(x){
paste0(x[2:3],collapse = "_")
})
unlist(lapply(strsplit(tr$tip.label,split = "_"),function(x){
paste0(x[2:3],collapse = "_")
}))
tr$tip.label<-unlist(lapply(strsplit(tr$tip.label,split = "_"),function(x){
paste0(x[2:3],collapse = "_")
}))
tr$tip.label
filo=tr
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
mat[1:10,1:6]
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
plot.phylo(filo_gamb,type="fan",edge.color="gray",cex=0.01)
plot.phylo(filo_gamb,type="fan",edge.color="gray",cex=0.01)
# #phyloBetaSorSim
library(betapart)
SIM<-phylo.beta.pair(x = mat,tree = filo_gamb,index.family = "sor")
psor[[i]]<-as.matrix(SIM$phylo.beta.sor)
psim[[i]]<-as.matrix(SIM$phylo.beta.sim)
SIM
SIM$phylo.beta.sor
as.matrix(SIM$phylo.beta.sor)
