"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Dropbox/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
table(grep(fish_mat$Referent.Species.Name,pattern = "[_]")==1:length(fish_mat$Referent.Species.Name))
# ##eliminating Orestias species because they are from Titikaka lake
fish_mat<-droplevels(fish_mat[!fish_mat$Genus.Referent.Species %in% "Orestias",])
#unindo os codigos antigos e novos
fish2=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/stat97bv_311019.csv",
sep=""),
sep=";",header=T)[,c("Sub_drainage","Basin2stat")]
head(fish2)
fish_mat<-merge(x=fish_mat,y=fish2,by.x="Sub_drainage",by.y="Sub_drainage",all=T)
head(fish_mat)
fish_mat$basin<-fish_mat$Basin2stat
####retirar as especies de origem marinha
head(fish_mat)
# marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
#   "Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
#   "Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
#   "Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
# fish_mat<-fish_mat[!fish_mat$Genus.Referent.Species %in% marineIncSp,]
fish_mat$occ<-1
library(reshape2)
fish_mat<-dcast(fish_mat,basin~Referent.Species.Name,fun.aggregate = sum, value.var = "occ")
dim(fish_mat)
fish_mat[1:10,1:5]
rownames(fish_mat)<- fish_mat$basin
fish_mat <- fish_mat[,-c(1)]
fish_mat[fish_mat>0]<-1
mami=fish_mat
psim<-list()
psor<-list()
psne<-list()
PDindex<-list()
PCDp<-list()
PCDc<-list()
#phylogeny
filos<-read.tree(file="actinopt_full.trees")#peixes #Rabosky et al. 2020 JBio & Chang et al. 2019 TREE
#filos<-read.tree(file="actinopt_12k_treePL.tre")#peixes
#loop over all posterior samplings
#library(foreach)
#library(doMC)
#registerDoMC(cores=4)
i=77
#posterior samplings
filo<-filos[[i]] #fazendo com uma arvore so
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
#mat[1:10,1:6]
#dim(mat)
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
#plot.phylo(filo_gamb,type="fan",edge.color="gray",cex=0.5)
##Fast package for PhyloMetrics
library(PhyloMeasures)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb,tolerance=0)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb,tolerance=2)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb,tolerance=16)
a<-b<-filo_gamb
is.ultrametric(a)
b<-nnls.tree(cophenetic(filo_gamb),filo_gamb,rooted=TRUE)
# library(phytools)
library(phangorn)
a<-b<-filo_gamb
is.ultrametric(a)
b<-nnls.tree(cophenetic(filo_gamb),filo_gamb,rooted=TRUE)
a<-as.matrix(cophenetic(a))
b<-as.matrix(cophenetic(b))
id<-sample(1:2173655,50000)
plot(a[lower.tri(a)][id]~b[lower.tri(b)][id])
cor(a[lower.tri(a)],b[lower.tri(b)])
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
# # compute Phylogenetic Diversity measures(MNTD,MPD,PD)
pd_z <- pd.query(filo_gamb,mat,null.model = "uniform",
standardize = TRUE, reps = 1999)
pd_p <- pd.pvalues(filo_gamb,mat,null.model = "uniform",
reps = 1999)
mpd_z <- mpd.query(filo_gamb,mat,null.model = "uniform",
standardize = TRUE, reps = 1999)
mpd_p <- mpd.pvalues(filo_gamb,mat,null.model = "uniform",
reps = 1999)
mntd_z <- mntd.query(filo_gamb,mat,null.model = "uniform",
standardize = TRUE, reps = 1999)
mntd_p <- mntd.pvalues(filo_gamb,mat,null.model = "uniform",
reps = 1999)
mntd_z
i=95
#posterior samplings
filo<-filos[[i]] #fazendo com uma arvore so
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
#mat[1:10,1:6]
#dim(mat)
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
#plot.phylo(filo_gamb,type="fan",edge.color="gray",cex=0.5)
a<-b<-filo_gamb
is.ultrametric(a)
b<-nnls.tree(cophenetic(filo_gamb),filo_gamb,rooted=TRUE)
a<-as.matrix(cophenetic(a))
b<-as.matrix(cophenetic(b))
id<-sample(1:2173655,50000)
plot(a[lower.tri(a)][id]~b[lower.tri(b)][id])
cor(a[lower.tri(a)],b[lower.tri(b)])
filos<-read.tree(file="actinopt_12k_treePL.tre")#peixes
filo<-filos
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
plot.phylo(filo_gamb,type="fan",edge.color="gray",cex=0.01)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb)
plot(filo_gamb)
plot(filo_gamb,cex=0.01)
a<-b<-filo_gamb
is.ultrametric(a)
b<-nnls.tree(cophenetic(filo_gamb),filo_gamb,rooted=TRUE)
a<-as.matrix(cophenetic(a))
b<-as.matrix(cophenetic(b))
id<-sample(1:2173655,50000)
plot(a[lower.tri(a)][id]~b[lower.tri(b)][id])
cor(a[lower.tri(a)],b[lower.tri(b)])
filos<-read.tree(file="actinopt_12k_treePL.tre")#peixes
filos
filo<-filos
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
filo_gamb
##Fast package for PhyloMetrics
library(PhyloMeasures)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb)
a<-b<-filo_gamb
is.ultrametric(a)
b<-nnls.tree(cophenetic(filo_gamb),filo_gamb,rooted=TRUE)
a<-as.matrix(cophenetic(a))
b<-as.matrix(cophenetic(b))
id<-sample(1:2173655,50000)
plot(a[lower.tri(a)][id]~b[lower.tri(b)][id])
cor(a[lower.tri(a)],b[lower.tri(b)])
#mudando nome de acordo com a filogenia
muda_nome=function(x,sep=" "){
unlist(lapply(strsplit(x = as.character(x),sep),function(x){
paste(x[1],x[2],sep="_")
}))
}
#carregando pacotes usados
library(letsR)
# library(maptools)
library(rgdal)
library(ape)
library(picante)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Dropbox/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
table(grep(fish_mat$Referent.Species.Name,pattern = "[_]")==1:length(fish_mat$Referent.Species.Name))
##excluding additional marine fish families   2022_03_25
#marine "Atherinopsidae", "Achiridae", "Belonidae", "Clupeidae","Engraulidae",
#       "Hemiramphidae", "Potamotrygonidae", "Pristigasteridae", "Sciaenidae"
#not marine according to Lovejoy et al.2006 "Atherinopsidae"
fish_mat<-droplevels(fish_mat[!fish_mat$Family.Referent.Species %in%
c("Atherinopsidae", "Achiridae", "Belonidae",
"Clupeidae","Engraulidae", "Hemiramphidae",
"Potamotrygonidae", "Pristigasteridae", "Sciaenidae"),])
table(fish_mat$Family.Referent.Species)
# ##eliminating Orestias species because they are from Titikaka lake
fish_mat<-droplevels(fish_mat[!fish_mat$Genus.Referent.Species %in% "Orestias",])
#unindo os codigos antigos e novos
fish2=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/stat97bv_311019.csv",
sep=""),
sep=";",header=T)[,c("Sub_drainage","Basin2stat")]
head(fish2)
fish_mat<-merge(x=fish_mat,y=fish2,by.x="Sub_drainage",by.y="Sub_drainage",all=T)
head(fish_mat)
fish_mat$basin<-fish_mat$Basin2stat
####retirar as especies de origem marinha
head(fish_mat)
marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
"Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
"Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
"Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
table(fish_mat$Genus.Referent.Species %in% marineIncSp)
# marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
#   "Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
#   "Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
#   "Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp]
table(fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp])
# marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
#   "Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
#   "Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
#   "Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
# table(fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp])
fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species%in% marineIncSp,]
# marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
#   "Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
#   "Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
#   "Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
# table(fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp])
fish_mat[fish_mat$Genus.Referent.Species%in% marineIncSp,]
#mudando nome de acordo com a filogenia
muda_nome=function(x,sep=" "){
unlist(lapply(strsplit(x = as.character(x),sep),function(x){
paste(x[1],x[2],sep="_")
}))
}
#carregando pacotes usados
library(letsR)
# library(maptools)
library(rgdal)
library(ape)
library(picante)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Dropbox/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
table(grep(fish_mat$Referent.Species.Name,pattern = "[_]")==1:length(fish_mat$Referent.Species.Name))
##excluding additional marine fish families   2022_03_25
#marine "Atherinopsidae", "Achiridae", "Belonidae", "Clupeidae","Engraulidae",
#       "Hemiramphidae", "Potamotrygonidae", "Pristigasteridae", "Sciaenidae",
#       "Tetraodontidae"
#not marine according to Lovejoy et al.2006 "Atherinopsidae"
fish_mat<-droplevels(fish_mat[!fish_mat$Family.Referent.Species %in%
c("Atherinopsidae", "Achiridae", "Belonidae",
"Clupeidae","Engraulidae", "Hemiramphidae",
"Potamotrygonidae", "Pristigasteridae", "Sciaenidae",
"Tetraodontidae"),])
table(fish_mat$Family.Referent.Species)
####retirar as especies de origem marinha
head(fish_mat)
marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
"Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
"Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
"Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
table(fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp])
# marineIncSp<-c("Potamotrygon","Paratrygon","Heliotrygon","Plesiotrygon","Anchoviella","Anchovia",
#   "Lycengraulis","Pterengraulis","Amazonsprattus","Jurengraulis","Pellona","Ilisha","Pristigaster",
#   "Rhinosardina","Potamorhaphis","Belonion","Pseudotylusurus","Hyporhamphus",
#   "Plagioscion","Pachypops","Pachyurus","Petilipinnis","Colomesus")
# table(fish_mat$Genus.Referent.Species[fish_mat$Genus.Referent.Species %in% marineIncSp])
fish_mat[fish_mat$Genus.Referent.Species%in% marineIncSp,]
# ##eliminating Orestias species because they are from Titikaka lake
fish_mat<-droplevels(fish_mat[!fish_mat$Genus.Referent.Species %in% "Orestias",])
#unindo os codigos antigos e novos
fish2=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/stat97bv_311019.csv",
sep=""),
sep=";",header=T)[,c("Sub_drainage","Basin2stat")]
head(fish2)
fish_mat<-merge(x=fish_mat,y=fish2,by.x="Sub_drainage",by.y="Sub_drainage",all=T)
head(fish_mat)
fish_mat$basin<-fish_mat$Basin2stat
fish_mat$occ<-1
library(reshape2)
fish_mat<-dcast(fish_mat,basin~Referent.Species.Name,fun.aggregate = sum, value.var = "occ")
dim(fish_mat)
fish_mat[1:10,1:5]
rownames(fish_mat)<- fish_mat$basin
fish_mat <- fish_mat[,-c(1)]
fish_mat[fish_mat>0]<-1
mami=fish_mat
psim<-list()
psor<-list()
psne<-list()
PDindex<-list()
PCDp<-list()
PCDc<-list()
#phylogeny
filos<-read.tree(file="actinopt_full.trees")#peixes #Rabosky et al. 2020 JBio & Chang et al. 2019 TREE
i=1
#i=1
#posterior samplings
filo<-filos[[i]] #fazendo com uma arvore so
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
# #phyloBetaSorSim
library(betapart)
SIM<-phylo.beta.pair(x = mat,tree = filo_gamb,index.family = "sor")
i=1
#i=1
#posterior samplings
filo<-filos[[i]] #fazendo com uma arvore so
#especies presentes tanto na filogenia quanto no arquivo mami
sp<-intersect(filo$tip.label,colnames(mami));length(sp)
#fazendo a matriz
mat<-fish_mat[,sp]
#deixar na filo as sp da matrix
#library(picante)
filo_gamb<-prune.sample(samp = mat, phylo = filo)
##Fast package for PhyloMetrics
library(PhyloMeasures)
# #Calculate mntd values for each community
is.ultrametric(filo_gamb)
# library(phytools)
library(phangorn)
if(!is.ultrametric(filo_gamb)){
# ## compute the NNLS ultrametric tree
filo_gamb<-nnls.tree(cophenetic(filo_gamb),filo_gamb,rooted=TRUE)
}
## check
is.ultrametric(filo_gamb)
# # compute Phylogenetic Diversity measures(MNTD,MPD,PD)
pd_z <- pd.query(filo_gamb,mat,null.model = "uniform",
standardize = TRUE, reps = 1999)
pd_z
pd_p <- pd.pvalues(filo_gamb,mat,null.model = "uniform",
reps = 1999)
pd_p
mpd_z <- mpd.query(filo_gamb,mat,null.model = "uniform",
standardize = TRUE, reps = 1999)
mpd_z
mpd_p <- mpd.pvalues(filo_gamb,mat,null.model = "uniform",
reps = 1999)
mpd_p
mntd_z <- mntd.query(filo_gamb,mat,null.model = "uniform",
standardize = TRUE, reps = 1999)
mntd_z
mntd_p <- mntd.pvalues(filo_gamb,mat,null.model = "uniform",
reps = 1999)
mntd_p
#mudando nome de acordo com a filogenia
muda_nome=function(x,sep=" "){
unlist(lapply(strsplit(x = as.character(x),sep),function(x){
paste(x[1],x[2],sep="_")
}))
}
#carregando pacotes usados
library(letsR)
# library(maptools)
library(rgdal)
library(ape)
library(picante)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Dropbox/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
#leaving only valid species names
dim(fish_mat)
head(fish_mat)
table(fish_mat$Occurrence.Status)
fish_mat<-droplevels(fish_mat[fish_mat$Occurrence.Status %in% "valid",])
fish_mat$Referent.Species.Name<-muda_nome(fish_mat$Referent.Species.Name,sep="[.]")
table(grep(fish_mat$Referent.Species.Name,pattern = "[_]")==1:length(fish_mat$Referent.Species.Name))
####retirar as especies de origem marinha
head(fish_mat)
# ##eliminating Orestias species because they are from Titikaka lake
fish_mat<-droplevels(fish_mat[!fish_mat$Genus.Referent.Species %in% "Orestias",])
#unindo os codigos antigos e novos
fish2=read.csv(paste("/home/murilo/Dropbox/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/stat97bv_311019.csv",
sep=""),
sep=";",header=T)[,c("Sub_drainage","Basin2stat")]
head(fish2)
fish_mat<-merge(x=fish_mat,y=fish2,by.x="Sub_drainage",by.y="Sub_drainage",all=T)
head(fish_mat)
fish_mat$basin<-fish_mat$Basin2stat
fish_mat$occ<-1
library(reshape2)
fish_mat<-dcast(fish_mat,basin~Referent.Species.Name,fun.aggregate = sum, value.var = "occ")
dim(fish_mat)
fish_mat[1:10,1:5]
rownames(fish_mat)<- fish_mat$basin
fish_mat <- fish_mat[,-c(1)]
fish_mat[fish_mat>0]<-1
mami=fish_mat
psim<-list()
psor<-list()
psne<-list()
PDindex<-list()
PCDp<-list()
PCDc<-list()
#phylogeny
filos<-read.tree(file="actinopt_full.trees")#peixes #Rabosky et al. 2020 JBio & Chang et al. 2019 TREE
library(ape)
library(ape)
??prune.sample
#mudando nome de acordo com a filogenia
muda_nome=function(x,sep=" "){
unlist(lapply(strsplit(x = as.character(x),sep),function(x){
paste(x[1],x[2],sep="_")
}))
}
#carregando pacotes usados
library(letsR)
# library(maptools)
library(rgdal)
library(ape)
library(picante)
#Amazon: New data set 2019_Dec
fish_mat=read.csv(paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
"/AmazonFish_analises/",
"StatistiquesSubBasinAmazon_02052016/",
"NewData_2019_10/Dataset1_SpeciesList_97bv_311019.csv",
sep=""),
# paste("/home/murilo/Insync/msdias@unb.br/OneDrive Biz/Amazon",
#       "/AmazonFish_analises/",
#       "StatistiquesSubBasinAmazon_02052016/",
#       "NewData_2017_04/MatrixSpecies_0417.csv",
#       sep="")
sep=";",header=T)
library(reshape2)
fish_mat<-dcast(fish_mat,basin~Referent.Species.Name,fun.aggregate = sum, value.var = "occ")
dim(fish_mat)
fish_mat[1:10,1:5]
rownames(fish_mat)<- fish_mat$basin
fish_mat <- fish_mat[,-c(1)]
fish_mat[fish_mat>0]<-1
mami=fish_mat
psim<-list()
psor<-list()
psne<-list()
PDindex<-list()
PCDp<-list()
PCDc<-list()
#phylogeny
filos<-read.tree(file="actinopt_full.trees")#peixes #Rabosky et al. 2020 JBio & Chang et al. 2019 TREE
filos<-read.tree(file="actinopt_12k_treePL.tre")#peixes
filos
fish_mat
a<-sort(sample(1900:2023,300,replace=TRUE))
a
table(a)
cumSums(table(a))
cumSum(table(a))
cumsum(table(a))
b<-cumsum(table(a))
plot(b)
